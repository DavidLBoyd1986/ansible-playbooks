---
- name: Bootstraps the controller with required configurations
  hosts: localhost
  vars_files:
    - /root/ansible/vault
    - /root/ansible/vars/bootstrap_vars
  tasks:
  - name: Ensure that 'username' was provided as a variable
    assert:
      that:
        - username is defined
        - username != ""
      fail_msg: "The 'username' variable must be defined and not empty."

  - name: Create ansible User
    user:
      name: ansible
      shell: /bin/bash
      state: present
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa
      ssh_key_passphrase: "{{ ansible_ssh_passphrase }}"

  - name: Create normal User
    user:
      name: "{{ username }}"
      shell: /bin/bash
      state: present
      password: "{{ username_ssh_passphrase | password_hash('sha512') }}"
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa
      ssh_key_passphrase: "{{ username_ssh_passphrase }}"

  - name: Add ansible and USER to sudoers
    copy:
      dest: /etc/sudoers.d/sudo_users
      content: "ansible ALL=(ALL) NOPASSWD: ALL\n{{ username }} ALL=(ALL) ALL\n"
      mode: '0440'

  - name: Create the /root/ansible/config_files directory
    file:
      path: /root/ansible/config_files
      state: directory

  - name: Create/update the ansible.cfg file for USER 
    copy:
      dest: /home/{{ username }}/.ansible.cfg
      owner: "{{ username }}"
      group: "{{ username }}"
      content: |
       [defaults]
       inventory = /home/{{ username }}/ansible/inventory.yml
       remote_user = ansible
       host_key_checking = False
       timeout = 30
       private_key_file = /home/{{ username }}/.ssh/ansible_id_rsa

       [privilege_escalation]
       become = True
       become_method = sudo
       become_user = root 

  - name: Create/update the ansible.cfg file for ansible user
    copy:
      dest: /home/ansible/.ansible.cfg
      owner: ansible 
      group: ansible
      content: |
       [defaults]
       inventory = /home/ansible/ansible/inventory.yml
       remote_user = ansible
       host_key_checking = False
       timeout = 30

       [privilege_escalation]
       become = True
       become_method = sudo
       become_user = root

  - name: Create the ansible.cfg file for root, with different parameters
    copy:
      dest: /root/.ansible.cfg
      content: |
       [defaults]
       inventory = /home/{{ username }}/ansible/inventory.yml
       host_key_checking = False
       timeout = 30

  - name: Copy 'ansible' user id_rsa.pub to config_files
    copy:
      src: /home/ansible/.ssh/id_rsa.pub
      dest: /root/ansible/config_files/ansible_id_rsa.pub
      mode: 0644

  - name: Copy User id_rsa.pub to config_files
    copy:
      src: /home/{{ username }}/.ssh/id_rsa.pub
      dest: /root/ansible/config_files/{{ username }}_id_rsa.pub
      mode: 0644

  - name: Copy User id_rsa <PRIVATE KEY> to config_files
    copy:
      src: /home/{{ username }}/.ssh/id_rsa
      dest: /root/ansible/config_files/{{ username }}_id_rsa
      mode: 0600

  - name: Copy ansible id_rsa <PRIVATE KEY> to user's ssh directory
    copy:
      src: /home/ansible/.ssh/id_rsa
      dest: /home/{{ username }}/.ssh/ansible_id_rsa
      owner: "{{ username }}"
      group: "{{ username }}"
      mode: 0600

  - name: Configure public SSH key for User on controller, as authorized
    authorized_key:
      user: "{{ username }}"
      key: "{{ lookup('file', '/home/{{ username }}/.ssh/id_rsa.pub') }}"
