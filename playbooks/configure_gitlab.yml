# Might make a playbook, and then a role, to install/configure gitlab

# Launch and configure server

# Install gitlab - link/docs here: https://packages.gitlab.com/gitlab/gitlab-ce/install
# https://docs.gitlab.com/topics/offline/quick_start_guide/

# Piping the script directly into bash didn't work, it hung midway, so I saved a copy and ran it locally
sudo curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh -o gitlab_install_script.sh
sudo ./gitlab_install_script.sh
sudo EXTERNAL_URL="https://gitlab.homelab.com" apt-get install gitlab-ce

sudo gitlab-ctl status # Grep or test for it running

# IMPORTANT - Manually add EXTERNAL_URL to local DNS on router.

# Add Self-Signed Cert
external_url = "Value set above" # Verify this value in /etc/gitlab/gitlab.rb
letsencrypt['enable'] = false # Change this value in /etc/gitlab/gitlab.rb
sudo mkdir -p /etc/gitlab/ssl
sudo chmod 755 /etc/gitlab/ssl
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/gitlab/ssl/my-host.internal.key --out /etc/gitlab/ssl/my-host.internal.crt
sudo gitlab-ctl reconfigure
sudo gitlab-ctl status # Grep or test for it running

# Enable Container Registry
registry_external_url "https://gitlab.example.com:4567" # Verify values in /etc/gitlab/gitlab.rb
sudo gitlab-ctl reconfigure
sudo gitlab-ctl status # Grep or test for it running

# Allow the Docker daemon to trust the registry
mkdir -p /etc/docker/certs.d/my-host.internal:5000
cp /etc/gitlab/ssl/my-host.internal.crt /etc/docker/certs.d/my-host.internal\:5000/ca.crt
mkdir -p /etc/gitlab-runner/certs
cp /etc/gitlab/ssl/my-host.internal.crt /etc/gitlab-runner/certs/ca.crt

# Enable Gitlab Runner on master Node - Temporary

# Launch Gitlab Runners on Kubernetes cluster - Prefered Solution





# Open firewall
sudo ufw allow 80
sudo ufw allow 443
sudo ufw allow 4567 # Need to work out container registry port
sudo ufw allow 5000 # Need to work out container registry port
sudo cat initial_root_password